// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cubefs/cubefs/blobstore/clustermgr/kvmgr (interfaces: KvMgrAPI)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	clustermgr "github.com/cubefs/cubefs/blobstore/api/clustermgr"
	gomock "github.com/golang/mock/gomock"
)

// MockKvMgrAPI is a mock of KvMgrAPI interface.
type MockKvMgrAPI struct {
	ctrl     *gomock.Controller
	recorder *MockKvMgrAPIMockRecorder
}

// MockKvMgrAPIMockRecorder is the mock recorder for MockKvMgrAPI.
type MockKvMgrAPIMockRecorder struct {
	mock *MockKvMgrAPI
}

// NewMockKvMgrAPI creates a new mock instance.
func NewMockKvMgrAPI(ctrl *gomock.Controller) *MockKvMgrAPI {
	mock := &MockKvMgrAPI{ctrl: ctrl}
	mock.recorder = &MockKvMgrAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKvMgrAPI) EXPECT() *MockKvMgrAPIMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockKvMgrAPI) Delete(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockKvMgrAPIMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockKvMgrAPI)(nil).Delete), arg0)
}

// Get mocks base method.
func (m *MockKvMgrAPI) Get(arg0 string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockKvMgrAPIMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockKvMgrAPI)(nil).Get), arg0)
}

// List mocks base method.
func (m *MockKvMgrAPI) List(arg0 *clustermgr.ListKvOpts) (*clustermgr.ListKvRet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0)
	ret0, _ := ret[0].(*clustermgr.ListKvRet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockKvMgrAPIMockRecorder) List(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockKvMgrAPI)(nil).List), arg0)
}

// Set mocks base method.
func (m *MockKvMgrAPI) Set(arg0 string, arg1 []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockKvMgrAPIMockRecorder) Set(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockKvMgrAPI)(nil).Set), arg0, arg1)
}
