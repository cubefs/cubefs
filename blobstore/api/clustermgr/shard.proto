syntax = "proto3";

package cubefs.blobstore.api.clustermgr;
option go_package = "./;clustermgr";

option (gogoproto.sizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

import "gogoproto/gogo.proto";
import "cubefs/blobstore/common/sharding/range.proto";

message Shard {
  uint32 shard_id = 1 [(gogoproto.customname) = "ShardID", (gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.ShardID"];
  uint64 applied_index = 3;
  cubefs.blobstore.common.sharding.Range range = 4 [(gogoproto.nullable) = false];
  repeated ShardUnitInfo units = 5 [(gogoproto.nullable) = false];
  uint64 epoch = 6;
}

message ShardUnitInfo {
  uint64 suid = 1 [(gogoproto.customname) = "Suid", (gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.Suid"];
  uint32 disk_id = 2 [(gogoproto.customname) = "DiskID", (gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.DiskID"];
  bool learner = 3;
}

message ShardReport {
  uint32 disk_id = 1 [(gogoproto.customname) = "DiskID", (gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.DiskID"];
  Shard  shard = 2 [(gogoproto.nullable) = false];
}

message ShardTask {
  uint32 task_type = 1 [(gogoproto.customname) = "TaskType", (gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.ShardTaskType"];;
  uint32 disk_id = 2 [(gogoproto.customname) = "DiskID", (gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.DiskID"];
  uint32 shard_id = 3 [(gogoproto.customname) = "ShardID", (gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.ShardID"];
  uint64 epoch = 4;
}
