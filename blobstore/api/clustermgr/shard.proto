syntax = "proto3";

package cubefs.blobstore.api.clustermgr;
option go_package = "./;clustermgr";

option (gogoproto.sizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

import "gogoproto/gogo.proto";
import "cubefs/blobstore/common/sharding/range.proto";

message Shard {
  uint32 shard_id = 1 [(gogoproto.customname) = "ShardID", (gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.ShardID"];
  uint64 applied_index = 2;
  uint32 leader_idx = 3;
  cubefs.blobstore.common.sharding.Range range = 4 [(gogoproto.nullable) = false];
  repeated ShardUnit units = 5 [(gogoproto.nullable) = false];
  uint64 route_version = 6 [(gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.RouteVersion"];
}

message ShardUnit {
  uint64 suid = 1 [(gogoproto.customname) = "Suid", (gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.Suid"];
  uint32 disk_id = 2 [(gogoproto.customname) = "DiskID", (gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.DiskID"];
  bool learner = 3;
}

message ShardUnitInfo {
  uint64 suid = 1 [(gogoproto.customname) = "Suid", (gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.Suid"];
  uint32 disk_id = 2 [(gogoproto.customname) = "DiskID", (gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.DiskID"];
  uint64 applied_index = 3;
  uint32 leader_idx = 4;
  cubefs.blobstore.common.sharding.Range range = 5 [(gogoproto.nullable) = false];
  uint64 route_version = 6 [(gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.RouteVersion"];
  string host = 7;
  bool learner = 8;
  uint32 status = 9 [(gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.ShardUnitStatus"];
}

message ShardTask {
  uint32 task_type = 1 [(gogoproto.customname) = "TaskType", (gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.ShardTaskType"];
  uint32 disk_id = 2 [(gogoproto.customname) = "DiskID", (gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.DiskID"];
  uint32 suid = 3 [(gogoproto.customname) = "Suid", (gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.Suid"];
  uint64 old_route_version = 4 [(gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.RouteVersion"];
  uint64 route_version = 5 [(gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.RouteVersion"];
}

message ShardReport {
  repeated ShardUnitInfo shards = 1;
}

message ShardReportRet {
  repeated ShardTask shard_tasks = 1 [(gogoproto.nullable) = false];
}

message AllocShardUnitArgs{
  uint64 suid = 1 [(gogoproto.customname) = "Suid", (gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.Suid"];
}

message AllocShardUnitRet {
  uint64 suid = 1 [(gogoproto.customname) = "Suid", (gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.Suid"];
  uint32 disk_id = 2 [(gogoproto.customname) = "DiskID", (gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.DiskID"];
  string host = 3;
}

message UpdateShardArgs {
  uint64 new_suid = 1 [(gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.Suid"];
  uint32 new_disk_id = 2 [(gogoproto.customname) = "NewDiskID", (gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.DiskID"];
  bool new_is_leaner = 3;
  uint64 old_suid = 4 [(gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.Suid"];
  bool old_is_leaner = 5;
}

message GetShardArgs {
  uint32 shard_id = 1 [(gogoproto.customname) = "ShardID", (gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.ShardID"];
}

message ListShardUnitArgs {
  uint32 disk_id = 1 [(gogoproto.customname) = "DiskID", (gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.DiskID"];
}

message ListShardUnitRet {
  repeated ShardUnitInfo shard_unit_infos = 1;
}

message ListShardArgs {
  uint32 marker = 1 [(gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.ShardID"];
  uint32 count = 2;
}

message ListShardRet {
  repeated Shard shards = 1;
  uint32 marker = 2 [(gogoproto.casttype) = "github.com/cubefs/cubefs/blobstore/common/proto.ShardID"];
}

message AdminUpdateShardUnitArgs {
  uint32 epoch = 1;
  uint32  next_epoch = 2;
  ShardUnitInfo unit_info = 3 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
}