// Copyright 2022 The CubeFS Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by MockGen. DO NOT EDIT.
// Source: ./catalog.go

// Package catalog is a generated GoMock package.
package catalog

import (
	reflect "reflect"

	proto "github.com/cubefs/cubefs/blobstore/common/proto"
	storage "github.com/cubefs/cubefs/blobstore/shardnode/storage"
	gomock "github.com/golang/mock/gomock"
)

// MockShardGetter is a mock of ShardGetter interface.
type MockShardGetter struct {
	ctrl     *gomock.Controller
	recorder *MockShardGetterMockRecorder
}

// MockShardGetterMockRecorder is the mock recorder for MockShardGetter.
type MockShardGetterMockRecorder struct {
	mock *MockShardGetter
}

// NewMockShardGetter creates a new mock instance.
func NewMockShardGetter(ctrl *gomock.Controller) *MockShardGetter {
	mock := &MockShardGetter{ctrl: ctrl}
	mock.recorder = &MockShardGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShardGetter) EXPECT() *MockShardGetterMockRecorder {
	return m.recorder
}

// GetShard mocks base method.
func (m *MockShardGetter) GetShard(diskID proto.DiskID, suid proto.Suid) (storage.ShardHandler, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetShard", diskID, suid)
	ret0, _ := ret[0].(storage.ShardHandler)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetShard indicates an expected call of GetShard.
func (mr *MockShardGetterMockRecorder) GetShard(diskID, suid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetShard", reflect.TypeOf((*MockShardGetter)(nil).GetShard), diskID, suid)
}
