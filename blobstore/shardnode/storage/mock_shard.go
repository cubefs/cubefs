// Code generated by MockGen. DO NOT EDIT.
// Source: ../storage/shard.go

// Package storage is a generated GoMock package.
package storage

import (
	context "context"
	reflect "reflect"

	shardnode "github.com/cubefs/cubefs/blobstore/api/shardnode"
	gomock "github.com/golang/mock/gomock"
)

// MockSpaceShardHandler is a mock of ShardHandler interface.
type MockSpaceShardHandler struct {
	ctrl     *gomock.Controller
	recorder *MockSpaceShardHandlerMockRecorder
}

// MockSpaceShardHandlerMockRecorder is the mock recorder for MockSpaceShardHandler.
type MockSpaceShardHandlerMockRecorder struct {
	mock *MockSpaceShardHandler
}

// NewMockSpaceShardHandler creates a new mock instance.
func NewMockSpaceShardHandler(ctrl *gomock.Controller) *MockSpaceShardHandler {
	mock := &MockSpaceShardHandler{ctrl: ctrl}
	mock.recorder = &MockSpaceShardHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSpaceShardHandler) EXPECT() *MockSpaceShardHandlerMockRecorder {
	return m.recorder
}

// Checkpoint mocks base method.
func (m *MockSpaceShardHandler) Checkpoint(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Checkpoint", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Checkpoint indicates an expected call of Checkpoint.
func (mr *MockSpaceShardHandlerMockRecorder) Checkpoint(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Checkpoint", reflect.TypeOf((*MockSpaceShardHandler)(nil).Checkpoint), ctx)
}

// DeleteItem mocks base method.
func (m *MockSpaceShardHandler) DeleteItem(ctx context.Context, h OpHeader, id []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteItem", ctx, h, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteItem indicates an expected call of DeleteItem.
func (mr *MockSpaceShardHandlerMockRecorder) DeleteItem(ctx, h, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteItem", reflect.TypeOf((*MockSpaceShardHandler)(nil).DeleteItem), ctx, h, id)
}

// GetEpoch mocks base method.
func (m *MockSpaceShardHandler) GetEpoch() uint64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEpoch")
	ret0, _ := ret[0].(uint64)
	return ret0
}

// GetEpoch indicates an expected call of GetEpoch.
func (mr *MockSpaceShardHandlerMockRecorder) GetEpoch() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEpoch", reflect.TypeOf((*MockSpaceShardHandler)(nil).GetEpoch))
}

// GetItem mocks base method.
func (m *MockSpaceShardHandler) GetItem(ctx context.Context, h OpHeader, id []byte) (shardnode.Item, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetItem", ctx, h, id)
	ret0, _ := ret[0].(shardnode.Item)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetItem indicates an expected call of GetItem.
func (mr *MockSpaceShardHandlerMockRecorder) GetItem(ctx, h, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetItem", reflect.TypeOf((*MockSpaceShardHandler)(nil).GetItem), ctx, h, id)
}

// InsertItem mocks base method.
func (m *MockSpaceShardHandler) InsertItem(ctx context.Context, h OpHeader, i shardnode.Item) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertItem", ctx, h, i)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertItem indicates an expected call of InsertItem.
func (mr *MockSpaceShardHandlerMockRecorder) InsertItem(ctx, h, i interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertItem", reflect.TypeOf((*MockSpaceShardHandler)(nil).InsertItem), ctx, h, i)
}

// ListItem mocks base method.
func (m *MockSpaceShardHandler) ListItem(ctx context.Context, h OpHeader, prefix, id []byte, count uint64) ([]*shardnode.Item, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListItem", ctx, h, prefix, id, count)
	ret0, _ := ret[0].([]*shardnode.Item)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListItem indicates an expected call of ListItem.
func (mr *MockSpaceShardHandlerMockRecorder) ListItem(ctx, h, prefix, id, count interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListItem", reflect.TypeOf((*MockSpaceShardHandler)(nil).ListItem), ctx, h, prefix, id, count)
}

// Stats mocks base method.
func (m *MockSpaceShardHandler) Stats() ShardStats {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Stats")
	ret0, _ := ret[0].(ShardStats)
	return ret0
}

// Stats indicates an expected call of Stats.
func (mr *MockSpaceShardHandlerMockRecorder) Stats() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stats", reflect.TypeOf((*MockSpaceShardHandler)(nil).Stats))
}

// UpdateItem mocks base method.
func (m *MockSpaceShardHandler) UpdateItem(ctx context.Context, h OpHeader, i shardnode.Item) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateItem", ctx, h, i)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateItem indicates an expected call of UpdateItem.
func (mr *MockSpaceShardHandlerMockRecorder) UpdateItem(ctx, h, i interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateItem", reflect.TypeOf((*MockSpaceShardHandler)(nil).UpdateItem), ctx, h, i)
}
