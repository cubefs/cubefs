// Code generated by MockGen. DO NOT EDIT.
// Source: shard.go

// Package catalog is a generated GoMock package.
package storage

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	proto "github.com/cubefs/cubefs/blobstore/common/proto"
)

// MockSpaceShardHandler is a mock of ShardConfigGetter interface.
type MockSpaceShardHandler struct {
	ctrl     *gomock.Controller
	recorder *MockSpaceShardHandlerMockRecorder
}

// MockSpaceShardHandlerMockRecorder is the mock recorder for MockSpaceShardHandler.
type MockSpaceShardHandlerMockRecorder struct {
	mock *MockSpaceShardHandler
}

// NewMockSpaceShardHandler creates a new mock instance.
func NewMockSpaceShardHandler(ctrl *gomock.Controller) *MockSpaceShardHandler {
	mock := &MockSpaceShardHandler{ctrl: ctrl}
	mock.recorder = &MockSpaceShardHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSpaceShardHandler) EXPECT() *MockSpaceShardHandlerMockRecorder {
	return m.recorder
}

// DeleteItem mocks base method.
func (m *MockSpaceShardHandler) DeleteItem(ctx context.Context, h ShardOpHeader, id []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteItem", ctx, h, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteItem indicates an expected call of DeleteItem.
func (mr *MockSpaceShardHandlerMockRecorder) DeleteItem(ctx, h, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteItem", reflect.TypeOf((*MockSpaceShardHandler)(nil).DeleteItem), ctx, h, id)
}

// GetItem mocks base method.
func (m *MockSpaceShardHandler) GetItem(ctx context.Context, h ShardOpHeader, id []byte) (proto.Item, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetItem", ctx, h, id)
	ret0, _ := ret[0].(proto.Item)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetItem indicates an expected call of GetItem.
func (mr *MockSpaceShardHandlerMockRecorder) GetItem(ctx, h, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetItem", reflect.TypeOf((*MockSpaceShardHandler)(nil).GetItem), ctx, h, id)
}

// GetLink mocks base method.
func (m *MockSpaceShardHandler) GetLink(ctx context.Context, h ShardOpHeader, get proto.GetLink) (proto.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLink", ctx, h, get)
	ret0, _ := ret[0].(proto.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLink indicates an expected call of GetLink.
func (mr *MockSpaceShardHandlerMockRecorder) GetLink(ctx, h, get interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLink", reflect.TypeOf((*MockSpaceShardHandler)(nil).GetLink), ctx, h, get)
}

// InsertItem mocks base method.
func (m *MockSpaceShardHandler) InsertItem(ctx context.Context, h ShardOpHeader, item proto.Item) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertItem", ctx, h, item)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertItem indicates an expected call of InsertItem.
func (mr *MockSpaceShardHandlerMockRecorder) InsertItem(ctx, h, item interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertItem", reflect.TypeOf((*MockSpaceShardHandler)(nil).InsertItem), ctx, h, item)
}

// Link mocks base method.
func (m *MockSpaceShardHandler) Link(ctx context.Context, h ShardOpHeader, l proto.Link) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Link", ctx, h, l)
	ret0, _ := ret[0].(error)
	return ret0
}

// Link indicates an expected call of Link.
func (mr *MockSpaceShardHandlerMockRecorder) Link(ctx, h, l interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Link", reflect.TypeOf((*MockSpaceShardHandler)(nil).Link), ctx, h, l)
}

// ListLink mocks base method.
func (m *MockSpaceShardHandler) ListLink(ctx context.Context, h ShardOpHeader, parent, cursor []byte, num uint32) ([]proto.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListLink", ctx, h, parent, cursor, num)
	ret0, _ := ret[0].([]proto.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListLink indicates an expected call of ListLink.
func (mr *MockSpaceShardHandlerMockRecorder) ListLink(ctx, h, parent, cursor, num interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListLink", reflect.TypeOf((*MockSpaceShardHandler)(nil).ListLink), ctx, h, parent, cursor, num)
}

// Search mocks base method.
func (m *MockSpaceShardHandler) Search(ctx context.Context, searchVector []float32, targetDist float32, limit int64) ([]proto.Item, []float32, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Search", ctx, searchVector, targetDist, limit)
	ret0, _ := ret[0].([]proto.Item)
	ret1, _ := ret[1].([]float32)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Search indicates an expected call of Search.
func (mr *MockSpaceShardHandlerMockRecorder) Search(ctx, searchVector, targetDist, limit interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Search", reflect.TypeOf((*MockSpaceShardHandler)(nil).Search), ctx, searchVector, targetDist, limit)
}

// Unlink mocks base method.
func (m *MockSpaceShardHandler) Unlink(ctx context.Context, h ShardOpHeader, unlink proto.Unlink) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Unlink", ctx, h, unlink)
	ret0, _ := ret[0].(error)
	return ret0
}

// Unlink indicates an expected call of Unlink.
func (mr *MockSpaceShardHandlerMockRecorder) Unlink(ctx, h, unlink interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Unlink", reflect.TypeOf((*MockSpaceShardHandler)(nil).Unlink), ctx, h, unlink)
}

// UpdateItem mocks base method.
func (m *MockSpaceShardHandler) UpdateItem(ctx context.Context, h ShardOpHeader, item proto.Item) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateItem", ctx, h, item)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateItem indicates an expected call of UpdateItem.
func (mr *MockSpaceShardHandlerMockRecorder) UpdateItem(ctx, h, item interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateItem", reflect.TypeOf((*MockSpaceShardHandler)(nil).UpdateItem), ctx, h, item)
}
