// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cubefs/cubefs/blobstore/blobnode/client (interfaces: IShardNode)

// Package client is a generated GoMock package.
package blobnode

import (
	context "context"
	"github.com/cubefs/cubefs/blobstore/blobnode/client"
	reflect "reflect"

	proto "github.com/cubefs/cubefs/blobstore/common/proto"
	gomock "github.com/golang/mock/gomock"
)

// MockIShardNode is a mock of IShardNode interface.
type MockIShardNode struct {
	ctrl     *gomock.Controller
	recorder *MockIShardNodeMockRecorder
}

// MockIShardNodeMockRecorder is the mock recorder for MockIShardNode.
type MockIShardNodeMockRecorder struct {
	mock *MockIShardNode
}

// NewMockIShardNode creates a new mock instance.
func NewMockIShardNode(ctrl *gomock.Controller) *MockIShardNode {
	mock := &MockIShardNode{ctrl: ctrl}
	mock.recorder = &MockIShardNodeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIShardNode) EXPECT() *MockIShardNodeMockRecorder {
	return m.recorder
}

// GetShardStatus mocks base method.
func (m *MockIShardNode) GetShardStatus(arg0 context.Context, arg1 proto.Suid, arg2 proto.DiskID) (*client.ShardStatusRet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetShardStatus", arg0, arg1, arg2)
	ret0, _ := ret[0].(*client.ShardStatusRet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetShardStatus indicates an expected call of GetShardStatus.
func (mr *MockIShardNodeMockRecorder) GetShardStatus(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetShardStatus", reflect.TypeOf((*MockIShardNode)(nil).GetShardStatus), arg0, arg1, arg2)
}

// UpdateShard mocks base method.
func (m *MockIShardNode) UpdateShard(arg0 context.Context, arg1 *client.UpdateShardArgs) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateShard", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateShard indicates an expected call of UpdateShard.
func (mr *MockIShardNodeMockRecorder) UpdateShard(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateShard", reflect.TypeOf((*MockIShardNode)(nil).UpdateShard), arg0, arg1)
}
